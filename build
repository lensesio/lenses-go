#!/bin/bash

executable="lenses-cli"
output="./bin"
input="./cmd/lenses-cli"

# disable CGO
export CGO_ENABLED=0
export GO111MODULE=on

if [[ -z $1 ]]; then
    echo "No os type provided. Pass all|windows|linux|darwin and the version to build"
    exit 1
fi

if [[ -z $2 ]]; then
    echo "No version provided. Pass all|windows|linux|darwin and the version to build"
    exit 1
fi

if [[ $1 == "all" || $1 == "windows" ]]; then

    # [-------Windows-------]
    echo "Building windows binaries..."
    # windows-x64
    export GOOS=windows
    export GOARCH=amd64
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-windows-amd64.exe $input
    # windows-x86

    export GOOS=windows
    export GOARCH=386
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-windows-386.exe $input
fi

if [[ $1 == "all" || $1 == "linux" ]]; then
    # [---------Linux--------]
    echo "Building linux binaries..."
    # linux-x64
    export GOOS=linux
    export GOARCH=amd64
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-linux-amd64 $input
    # linux-x86
    export GOOS=linux
    export GOARCH=386
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-linux-386 $input
    # linux-arm64
    export GOOS=linux
    export GOARCH=arm64
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-linux-arm64 $input
    # linux-arm
    export GOOS=linux
    export GOARCH=arm
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-linux-arm $input
fi

if [[ $1 == "all" || $1 == "darwin" ]]; then
    # [---------OSX--------]
    echo "Building darwin (osx) x64 binary..."
    #darwin-x64
    export GOOS=darwin
    export GOARCH=amd64
    go get
    go get ./cmd/lenses-cli
    go build -ldflags="-s -w -X main.buildRevision=$(git rev-parse HEAD) -X main.buildTime=$(date +%s) -X main.buildVersion=$2" -o $output/$executable-darwin-amd64 $input
fi    